diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index bcbe80ff..9d0d26cb 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -232,6 +232,7 @@ add_module(Fabm     USE_FABM  OFF)
 add_module(EcoSim   USE_ECO   OFF)
 add_module(Sediment USE_SED   OFF)
 add_module(Sed2d    USE_SED2D OFF)
+add_module(AED      USE_AED   OFF)
 add_module(Hydro    USE_HYDRO ON)
 add_module(Core     USE_SCHISM ON)
 
@@ -326,6 +327,9 @@ endforeach()
 string(CONCAT mod_tag ${all_use_mod_defs})
 string(REPLACE USE_ _ mod_tag_rev ${mod_tag})
 string(REPLACE _HYDRO_SCHISM "" mod_tag_rev ${mod_tag_rev})
+if (WITH_AED_PLUS)
+  string(REPLACE _AED _AED+ mod_tag_rev ${mod_tag_rev})
+endif()
 
 
 ######## Tests ##################
diff --git a/src/Core/schism_glbl.F90 b/src/Core/schism_glbl.F90
index 92a0e3c3..81f8ef26 100644
--- a/src/Core/schism_glbl.F90
+++ b/src/Core/schism_glbl.F90
@@ -79,7 +79,7 @@ module schism_glbl
                       ubs0,ubs1,ubs2,ubs4,ubs5,ubs6, &
                       a2_cm03,schk,schpsi
 
-  integer,parameter :: natrm=12 !# of _available_ tracer models at the moment (including T,S)
+  integer,parameter :: natrm=13 !# of _available_ tracer models at the moment (including T,S)
   integer,parameter :: mntracers=30 !max # of tracers, used only for dimensioning btrack arrays. Must >=ntracers
 
   !Parameters from param.nml
diff --git a/src/Core/scribe_io.F90 b/src/Core/scribe_io.F90
index e9f84333..07add8b6 100644
--- a/src/Core/scribe_io.F90
+++ b/src/Core/scribe_io.F90
@@ -677,6 +677,12 @@
       enddo !j
 #endif/*USE_FABM*/
 
+#ifdef USE_AED
+      DO j=1,ntrs(13)
+        CALL scribe_recv_write(it,1,1,itotal,icount_out_name)
+      ENDDO
+#endif/* USE_AED */
+
 #ifdef USE_ANALYSIS
       if(iof_ana(14)==1) call scribe_recv_write(it,1,1,itotal,icount_out_name)
 !        itotal=itotal+1
@@ -948,7 +954,7 @@
       character(len=140) :: fname
       character(len=12) :: ifile_char
       real(rkind) :: a1d(1)
-      
+
       !Check inputs
       if(idim1/=nvrt) call parallel_abort('nc_writeout3D:idim1/=nvrt')
       if(imode==1) then
diff --git a/src/Hydro/schism_finalize.F90 b/src/Hydro/schism_finalize.F90
index 35db5919..586ea3d4 100644
--- a/src/Hydro/schism_finalize.F90
+++ b/src/Hydro/schism_finalize.F90
@@ -25,6 +25,10 @@
       USE fabm_schism, only: fabm_schism_close_output_netcdf
 #endif
 
+#ifdef USE_AED
+      USE schism_aed
+#endif
+
 #ifdef USE_PETSC
       USE petsc_schism
 #endif
@@ -143,6 +147,12 @@
       call date_and_time(date,timestamp)
       if(myrank==0) write(16,'(/4a)') 'Run completed successfully at ',date,', ',timestamp
 
+#ifdef USE_AED
+      !# put here because putting it after the file closing loop below would mean our nc file was closed
+      !# before we get to see it and any messages printed would go to files "fort.6" or "fort.16"
+      CALL schism_aed_finalise()
+#endif
+
 !     Close file handles - may have problem on some systems
       do i=1,2000
         close(i)
diff --git a/src/Hydro/schism_init.F90 b/src/Hydro/schism_init.F90
index 34383a52..2a8d057b 100644
--- a/src/Hydro/schism_init.F90
+++ b/src/Hydro/schism_init.F90
@@ -106,6 +106,10 @@
 
 #endif
 
+#ifdef USE_AED
+      USE schism_aed
+#endif
+
       implicit none
       include 'mpif.h'
  
@@ -341,6 +345,7 @@
 !    10: TIMOR
 !    11: FABM
 !    12: DVD numerical mixing analysis of Klingbeit
+!    13: AED
 
       !Init. # of tracers in models 1:natrm
       !A tracer model is activated iff ntrs()>0
@@ -417,6 +422,11 @@
       tr_mname(12)='DVD'
 #endif
 
+#ifdef USE_AED
+      CALL schism_aed_configure_models(ntracers=ntrs(13))
+      tr_mname(13)='AED' !3-char
+#endif
+
       !Total # of tracers (including T,S)
       !The big tracer arrays are: tr_el(ntracers,nvrt,nea2),tr_nd0(ntracers,nvrt,npa)
       !The order of each tracer modules can be seen above
@@ -5091,6 +5101,10 @@
       call init_flmud
 #endif /*USE_TIMOR*/
 
+#ifdef USE_AED
+      CALL schism_aed_init_models()
+#endif
+
 #ifdef USE_FIB
       ! Fecal Indicator Bacteria model
       if(myrank==0) write(16,*) 'FIB model invoked'
@@ -6682,6 +6696,10 @@
       enddo !i
 #endif
 
+#ifdef USE_AED
+      CALL schism_aed_name_2D_scribes(out_name, iout_23d, counter_out_name, ncount_2delem)
+#endif
+
 #ifdef USE_ICE
       if(iof_ice(1)==1) then
         ncount_2delem=ncount_2delem+1
@@ -6917,6 +6935,12 @@
       enddo !i
 #endif/*USE_FABM*/
 
+#ifdef USE_AED
+      IF (schism_aed_name_3D_scribes(out_name, iout_23d, counter_out_name, ncount_3dnode) > ntrs(13) ) THEN
+         write(16,*) "WARNING: More AED variable names than expected"
+      ENDIF
+#endif
+
 #ifdef USE_ANALYSIS
       if(iof_ana(14)==1) then
         ncount_3dnode=ncount_3dnode+1
diff --git a/src/Hydro/schism_step.F90 b/src/Hydro/schism_step.F90
index b521650e..bc7196bf 100644
--- a/src/Hydro/schism_step.F90
+++ b/src/Hydro/schism_step.F90
@@ -47,6 +47,10 @@
       USE fabm_schism, only: fabm_schism_write_output_netcdf
 #endif
 
+#ifdef USE_AED
+      USE schism_aed
+#endif
+
 #ifdef USE_ICM
       use icm_mod, only : ntrs_icm,itrs_icm,nout_icm,wqout,nhot_icm,wqhot,isav_icm,sht
 #endif
@@ -7687,6 +7691,10 @@
         if(myrank==0) write(16,*) 'Done FABM calculations'
 #endif
 
+#ifdef USE_AED
+        CALL schism_aed_do(it)
+#endif
+
 #ifdef USE_ICM
         itmp1=irange_tr(1,7)
         itmp2=irange_tr(2,7)
@@ -9140,6 +9148,9 @@
         noutput=noutput+1
 #endif
 
+#ifdef USE_AED
+        CALL aed_writeout(id_out_var, noutput,npa,tr_nd)
+#endif
 
 #ifdef USE_SED2D
         if(iof_sed2d(1)==1) call writeout_nc(id_out_var(noutput+5), &
@@ -9705,6 +9716,14 @@
         enddo !i
 #endif
 
+#ifdef USE_AED
+        DO i=1,n_vars_ben
+           icount=icount+1
+           IF (icount > ncount_2delem) CALL parallel_abort('STEP: icount>nscribes(1.2)')
+           varout_2delem(icount,:)=cc_hz(i, 1:ne)
+        ENDDO
+#endif
+
 #ifdef USE_ICE
         if(iof_ice(1)==1) then
           icount=icount+1
@@ -10002,6 +10021,12 @@
         enddo !i
 #endif
 
+#ifdef USE_AED
+        DO i=1,ntrs(13)
+           CALL savensend3D_scribe(icount,1,1,nvrt,np,tr_nd(irange_tr(1,13)-1+i,:,1:np))
+        ENDDO
+#endif
+
 #ifdef USE_ANALYSIS
       if(iof_ana(14)==1) then
         call savensend3D_scribe(icount,1,1,nvrt,np,swild95(:,1:np,7))
@@ -10104,7 +10129,7 @@
       enddo !i
 #endif /*USE_ANALYSIS*/
 
-        
+
       !Check total # of vars
       if(icount/=ncount_3dside) then
         write(errmsg,*)'STEP: 3D count wrong(2):',icount,ncount_3dside
@@ -10182,6 +10207,12 @@
       end if
 #endif
 
+#ifdef USE_AED
+      IF (mod(it,nspool)==0) THEN
+        CALL schism_aed_write_output(time, it, nspool)
+      ENDIF
+#endif
+
 !     Open new global output files and write header data
 !#ifdef OLDIO
 !      if(nc_out>0.and.mod(it,ihfskip)==0) then
diff --git a/src/Utility/Combining_Scripts/CMakeLists.txt b/src/Utility/Combining_Scripts/CMakeLists.txt
index bba85621..45355429 100644
--- a/src/Utility/Combining_Scripts/CMakeLists.txt
+++ b/src/Utility/Combining_Scripts/CMakeLists.txt
@@ -4,13 +4,17 @@ add_definitions(${C_PREPROCESS_FLAG})
 add_executable(combine_gr3 combine_gr3.f90)
 add_executable(combine_hotstart7 combine_hotstart7.f90)
 add_executable(combine_output11 combine_output11.f90 netcdf_var_names.f90)
+add_executable(combine_output11_MPI combine_output11_MPI.F90 netcdf_var_names.f90)
 
 target_link_libraries(combine_hotstart7 utillib ${NetCDFLIBS} ${HDF5_LIBRARIES})
 target_link_libraries(combine_output11 utillib ${NetCDFLIBS} ${HDF5_LIBRARIES})
+target_link_libraries(combine_output11_MPI utillib ${NetCDFLIBS} ${HDF5_LIBRARIES} MPI::MPI_Fortran)
 
 target_include_directories(combine_hotstart7 PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/../UtilLib)
 target_include_directories(combine_output11 PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/../UtilLib)
+target_include_directories(combine_output11_MPI PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/../UtilLib ${MPI_INCLUDE_PATH})
 
 add_dependencies(combine_gr3 utillib)
 add_dependencies(combine_hotstart7 utillib)
 add_dependencies(combine_output11 utillib)
+add_dependencies(combine_output11_MPI utillib)
diff --git a/src/Utility/Combining_Scripts/combine_output11.f90 b/src/Utility/Combining_Scripts/combine_output11.f90
index 73940a7f..42a4ec2c 100644
--- a/src/Utility/Combining_Scripts/combine_output11.f90
+++ b/src/Utility/Combining_Scripts/combine_output11.f90
@@ -103,6 +103,9 @@ subroutine combine_output11(ibgn,iend,iwetdry,to_be_combined,output_prefix)
   integer          :: varid,dimid
 !  integer :: netcdf_var_dim
 !  logical :: found_netcdf_var
+  logical :: original_version = .FALSE.
+
+  if (output_prefix == "schout") original_version = .TRUE.
 
   invalid_index = -99999
 
@@ -254,11 +257,16 @@ subroutine combine_output11(ibgn,iend,iwetdry,to_be_combined,output_prefix)
     write(it_char,'(i12)')iinput
     it_char=adjustl(it_char)  !place blanks at end
     it_len=len_trim(it_char)  !length without trailing blanks
+  if (original_version) then
     fname=trim(output_prefix)//'_'//it_char(1:it_len)//'.nc'
+  else
+    fname=trim(output_prefix)//'_cmb_'//it_char(1:it_len)//'.nc'
+  endif
     !fname=it_char(1:it_len)//'_hvel.nc'
     fname=adjustl(fname)
 
 !   Some compiles do not like 3 arguemnts in OR()
+  print*,"creating ", trim(fname)
     iret = nf90_create(trim(fname), OR(NF90_CLOBBER,OR(NF90_NETCDF4,NF90_CLASSIC_MODEL)), ncid)
     !define dimensions
     iret = nf90_def_dim(ncid, 'nSCHISM_hgrid_node',np_global, node_dim)
@@ -505,10 +513,14 @@ subroutine combine_output11(ibgn,iend,iwetdry,to_be_combined,output_prefix)
 !          endif
 
     !Find and define variables
+  if (original_version) then
     file63='schout_000000_'//it_char(1:it_len)//'.nc'
+  else
+    file63=trim(output_prefix)//'_00000'//it_char(1:it_len)//'.nc'
+  endif
     file63=adjustl(file63)
     iret=nf90_open(trim(file63),NF90_NOWRITE,ncid2)
-    if(iret/=NF90_NOERR) stop 'Failed to open(1)'
+    if(iret/=NF90_NOERR) stop 'Failed to open(1) '//trim(file63)
     !iret=nf_inq_nvars(ncid2,nvars)
     iret=nf90_inquire(ncid2,nVariables=nvars)
 !    write(99,*)'nvars=',nvars,file63
@@ -734,11 +746,15 @@ subroutine combine_output11(ibgn,iend,iwetdry,to_be_combined,output_prefix)
       do irank=0,nproc-1
         !Open input file
         write(a_4,'(i6.6)') irank
+     if (original_version) then
         file63='schout_'//a_4//'_'//it_char(1:it_len)//'.nc'
+     else
+        file63=trim(output_prefix)//'_'//trim(a_4)//'.nc'
+     endif
         file63=adjustl(file63)
         iret=nf90_open(trim(file63),NF90_NOWRITE,ncid2)
         if(iret/=NF90_NOERR) then
-          print*, 'Failed to open(2):',irank
+          print*, 'Failed to open(2):',trim(file63),' ',irank
           stop
         endif
         !write(99,*)'nvars=',nvars,file63
diff --git a/src/Utility/Combining_Scripts/combine_output11_MPI.F90 b/src/Utility/Combining_Scripts/combine_output11_MPI.F90
index df3c23f5..9ea7496c 100644
--- a/src/Utility/Combining_Scripts/combine_output11_MPI.F90
+++ b/src/Utility/Combining_Scripts/combine_output11_MPI.F90
@@ -111,6 +111,9 @@ subroutine combine_output11(comm,ibgn,iend,iwetdry,to_be_combined,output_prefix)
   integer          :: varid,dimid
 !  integer :: netcdf_var_dim
 !  logical :: found_netcdf_var
+  logical :: original_version = .FALSE.
+
+  if (output_prefix == "schout") original_version = .TRUE.
 
   invalid_index = -99999
 
@@ -280,10 +283,15 @@ subroutine combine_output11(comm,ibgn,iend,iwetdry,to_be_combined,output_prefix)
     write(it_char,'(i12)')iinput
     it_char=adjustl(it_char)  !place blanks at end
     it_len=len_trim(it_char)  !length without trailing blanks
+  if (original_version) then
     fname=trim(output_prefix)//'_'//it_char(1:it_len)//'.nc'
+  else
+    fname=trim(output_prefix)//'_cmb_'//it_char(1:it_len)//'.nc'
+  endif
     fname=adjustl(fname)
 
 !   Some compiles do not like 3 arguemnts in OR()
+  print*,"creating ", trim(fname)
     iret = nf90_create(trim(fname), OR(NF90_CLOBBER,OR(NF90_NETCDF4,NF90_CLASSIC_MODEL)), ncid)
     !define dimensions
     iret = nf90_def_dim(ncid, 'nSCHISM_hgrid_node',np_global, node_dim)
@@ -532,11 +540,15 @@ subroutine combine_output11(comm,ibgn,iend,iwetdry,to_be_combined,output_prefix)
 !          endif
 
     !Find and define variables
+  if (original_version) then
     file63='schout_000000_'//it_char(1:it_len)//'.nc'
+  else
+    file63=trim(output_prefix)//'_00000'//it_char(1:it_len)//'.nc'
+  endif
     file63=adjustl(file63)
     iret=nf90_open(trim(file63),OR(NF90_NETCDF4,NF90_NOWRITE),ncid2)
     if(iret/=NF90_NOERR) then
-      print*, 'Failed to open(1)'
+      print*, 'Failed to open(1) '//trim(file63)
       call mpi_abort(comm,0,j10)
     endif
     !iret=nf_inq_nvars(ncid2,nvars)
@@ -767,11 +779,15 @@ subroutine combine_output11(comm,ibgn,iend,iwetdry,to_be_combined,output_prefix)
       do irank=0,nproc-1
         !Open input file
         write(a_4,'(i6.6)') irank
+     if (original_version) then
         file63='schout_'//a_4//'_'//it_char(1:it_len)//'.nc'
+     else
+        file63=trim(output_prefix)//'_'//trim(a_4)//'.nc'
+     endif
         file63=adjustl(file63)
         iret=nf90_open(trim(file63),OR(NF90_NETCDF4,NF90_NOWRITE),ncid2)
         if(iret/=NF90_NOERR) then
-          print*, 'Failed to open(2):',irank
+          print*, 'Failed to open(2):',trim(file63),' ',irank
           call mpi_abort(comm,0,j10)
         endif
         !write(99,*)'nvars=',nvars,file63
